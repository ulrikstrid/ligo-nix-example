#import "./config.jsligo" "Config"
#import "./errors.jsligo" "Errors"

export type parameterChange = (n: unit) => Config.t
export type operationList = (n: unit) => list<operation>;

export type t =
    | ["ParameterChange", parameterChange]
    | ["OperationList", operationList];

const unpack = (hashOpt: option<bytes>, packed: bytes): t => {
    return match(hashOpt, {
        None: () => failwith(Errors.hashNotFound),
        Some: (hash_: bytes) => {
            assert_with_error(
                hash_ == Crypto.sha256(packed),
                Errors.hashNotMatch
            );

            return match((Bytes.unpack(packed) as option<t>), {
                None: () => failwith(Errors.unpackMismatch),
                Some: (lambda_: t) => lambda_
            });
        }
    });
};
